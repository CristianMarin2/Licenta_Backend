// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SelfCheckoutSystem.Data;

#nullable disable

namespace SelfCheckoutSystem.Migrations
{
    [DbContext(typeof(SelfCheckoutDbContext))]
    [Migration("20250613123255_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SelfCheckoutSystem.Models.Product", b =>
                {
                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VatRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Barcode");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SelfCheckoutSystem.Models.SaleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProductBarcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TransactionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductBarcode");

                    b.HasIndex("TransactionId");

                    b.ToTable("SaleItems");
                });

            modelBuilder.Entity("SelfCheckoutSystem.Models.SaleSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CashierCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("DeclaredFinalCashAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ExpectedFinalCashAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitialCashAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CashierCode");

                    b.ToTable("SaleSessions");
                });

            modelBuilder.Entity("SelfCheckoutSystem.Models.SaleTransaction", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("CardAmountReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("CashAmountReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ChangeGiven")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("PosTerminalNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("SaleSessionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransactionNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SaleSessionId");

                    b.ToTable("SaleTransactions");
                });

            modelBuilder.Entity("SelfCheckoutSystem.Models.User", b =>
                {
                    b.Property<string>("EmployeeCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeCode");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SelfCheckoutSystem.Models.SaleItem", b =>
                {
                    b.HasOne("SelfCheckoutSystem.Models.Product", "Product")
                        .WithMany("SaleItems")
                        .HasForeignKey("ProductBarcode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SelfCheckoutSystem.Models.SaleTransaction", "Transaction")
                        .WithMany("Items")
                        .HasForeignKey("TransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Transaction");
                });

            modelBuilder.Entity("SelfCheckoutSystem.Models.SaleSession", b =>
                {
                    b.HasOne("SelfCheckoutSystem.Models.User", "Cashier")
                        .WithMany("SaleSessions")
                        .HasForeignKey("CashierCode")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cashier");
                });

            modelBuilder.Entity("SelfCheckoutSystem.Models.SaleTransaction", b =>
                {
                    b.HasOne("SelfCheckoutSystem.Models.SaleSession", "SaleSession")
                        .WithMany("Transactions")
                        .HasForeignKey("SaleSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SaleSession");
                });

            modelBuilder.Entity("SelfCheckoutSystem.Models.Product", b =>
                {
                    b.Navigation("SaleItems");
                });

            modelBuilder.Entity("SelfCheckoutSystem.Models.SaleSession", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("SelfCheckoutSystem.Models.SaleTransaction", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SelfCheckoutSystem.Models.User", b =>
                {
                    b.Navigation("SaleSessions");
                });
#pragma warning restore 612, 618
        }
    }
}
